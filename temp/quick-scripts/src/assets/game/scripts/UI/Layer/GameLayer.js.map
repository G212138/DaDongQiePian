{"version":3,"sources":["assets\\game\\scripts\\UI\\Layer\\GameLayer.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ListenerManager } from \"../../../../frame/scripts/Manager/ListenerManager\";\nimport { SyncDataManager } from \"../../../../frame/scripts/Manager/SyncDataManager\";\nimport { EventType } from \"../../Data/EventType\";\nimport Cube from \"../Item/Cube\";\nimport GameUI from \"../Item/GameUI\";\nimport ThreeNode from \"../Item/ThreeDNode\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class GameLayer extends cc.Component {\n    @property(ThreeNode)\n    private threeDNode: ThreeNode = null;\n    @property(GameUI)\n    private gameUI: GameUI = null;\n\n    @property(cc.Node)\n    private threeDCamera: cc.Node = null;\n    @property(cc.Node)\n    private cubeRootNode: cc.Node = null;\n    @property(cc.Node)\n    private addMinus: cc.Node = null;\n    @property(cc.Node)\n    private img_huangbian: cc.Node[] = [];\n\n    private touchEventId: number;\n\n    onLoad() {\n        ListenerManager.on(EventType.ENTER_GAME, this.handleEnterGame, this);\n\n        // this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this)\n        // this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\n        // this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\n    }\n    onDestroy() {\n        ListenerManager.off(EventType.ENTER_GAME, this.handleEnterGame, this);\n\n        // this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this)\n        // this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\n        // this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\n    }\n\n    private handleEnterGame() {\n        this.threeDNode.init();\n        this.gameUI.init();\n    }\n\n    private onDragStart(data) {\n        this.addMinus.active = false;\n        this.img_huangbian[0].active = false;\n        this.img_huangbian[1].active = false;\n        this.img_huangbian[2].active = false;\n    }\n\n    private onDragMove(data) {\n        let pos = data.target.parent.convertToWorldSpaceAR(cc.v2(data.pos.x, data.pos.y));\n        let prevPos = data.target.parent.convertToWorldSpaceAR(cc.v2(data.prevLocation.x, data.prevLocation.y));\n        let prevLocation = cc.v2(prevPos.x, prevPos.y);\n        let curLocation = cc.v2(pos.x, pos.y);\n\n        let vel = curLocation.sub(prevLocation);\n        let disX = vel.x;\n        let disY = vel.y;\n\n        let eulerX = this.cubeRootNode.eulerAngles.x;\n        let eulerY = this.cubeRootNode.eulerAngles.y;\n        let eulerZ = this.cubeRootNode.eulerAngles.z;\n        let quat = new cc.Quat()\n        cc.Quat.fromEuler(quat, eulerX, eulerY, eulerZ)\n        let changed = false\n        if (Math.abs(disX) > 0.1) {\n            let angle = (disX / 2436 * 180);\n            cc.Quat.rotateAround(quat, quat, cc.Vec3.UP, cc.misc.degreesToRadians(angle))\n            changed = true\n        }\n        if (Math.abs(disY) > 0.1) {\n            let angle = -(disY / 2436 * 180);\n            cc.Quat.rotateAround(quat, quat, this.threeDCamera.right, cc.misc.degreesToRadians(angle))\n            changed = true\n        }\n        if (changed) {\n            let outEuler = cc.v3()\n            quat.toEuler(outEuler)\n            this.onChangeBigCubeEuler(outEuler.x, outEuler.y, outEuler.z)\n        }\n    }\n\n    private onDragEnd(data) {\n        if (data.isClick) {\n            this.addMinus.active = false;\n            this.img_huangbian[0].active = false;\n            this.img_huangbian[1].active = false;\n            this.img_huangbian[2].active = false;\n        }\n        this.node.position = cc.Vec3.ZERO;\n        if (data.isClick && SyncDataManager.getSyncData().customSyncData.enableClick) {\n            let pos = data.target.parent.convertToWorldSpaceAR(cc.v2(data.pos.x, data.pos.y));\n            let location = cc.v2(pos.x, pos.y);\n            let ray = cc.Camera.main.getRay(location);\n            let results = cc.geomUtils.intersect.raycast(this.cubeRootNode, ray, null, null);\n            for (let i = 0; i < results.length; i++) {\n                if (results[0].node.parent.getComponent(Cube)) {\n                    results[0].node.parent.getComponent(Cube).clickCube(results[1].node.name);\n                }\n                return;\n            }\n        }\n    }\n\n    private onChangeBigCubeEuler(eulerX: number, eulerY: number, eulerZ: number) {\n        let rotation = cc.quat();\n        cc.Quat.fromEuler(rotation, eulerX, eulerY, eulerZ);\n        this.cubeRootNode.setRotation(rotation);\n    }\n\n    // private isAllowTouch: boolean = false;\n    // private onTouchStart(event: cc.Event.EventTouch) {\n    //     this.isAllowTouch = true;\n    //     let eventID = event.getID();\n    //     if (this.touchEventId != null) {\n    //         return\n    //     }\n    //     this.touchEventId = eventID;\n    // }\n\n    // private onTouchMove(event: cc.Event.EventTouch) {\n    //     let eventID = event.getID();\n    //     if (this.touchEventId != null && eventID == this.touchEventId) {\n    //         //（滑的距离/1000）*180=旋转的角度\n    //         let prevLocation = event.getPreviousLocation()\n    //         let curLocation = event.getLocation()\n    //         let vel = curLocation.sub(prevLocation);\n    //         let disX = vel.x;\n    //         let disY = vel.y;\n\n    //         let eulerX = this.cubeRootNode.eulerAngles.x;\n    //         let eulerY = this.cubeRootNode.eulerAngles.y;\n    //         let eulerZ = this.cubeRootNode.eulerAngles.z;\n    //         let quat = new cc.Quat()\n    //         cc.Quat.fromEuler(quat, eulerX, eulerY, eulerZ)\n    //         let changed = false\n    //         if (Math.abs(disX) > 0.1) {\n    //             let angle = (disX / 2436 * 180);\n    //             cc.Quat.rotateAround(quat, quat, cc.Vec3.UP, cc.misc.degreesToRadians(angle))\n    //             changed = true\n    //         }\n    //         if (Math.abs(disY) > 0.1) {\n    //             let angle = -(disY / 2436 * 180);\n    //             cc.Quat.rotateAround(quat, quat, this.threeDCamera.right, cc.misc.degreesToRadians(angle))\n    //             changed = true\n    //         }\n    //         if (changed) {\n    //             this.isAllowTouch = false;\n    //             let outEuler = cc.v3()\n    //             quat.toEuler(outEuler)\n    //             this.onChangeBigCubeEuler(outEuler.x, outEuler.y, outEuler.z)\n    //         }\n    //     }\n    // }\n\n\n\n    // private onTouchEnd(event: cc.Event.EventTouch) {\n    //     let eventID = event.getID();\n    //     if (this.touchEventId != null && eventID == this.touchEventId) {\n    //         this.touchEventId = null\n\n    //         if (this.isAllowTouch) {\n    //             let location = event.getLocation();\n    //             let ray = cc.Camera.main.getRay(location);\n    //             let results = cc.geomUtils.intersect.raycast(this.cubeRootNode, ray, null, null);\n    //             for (let i = 0; i < results.length; i++) {\n    //                 if (results[0].node.parent.getComponent(Cube)) {\n    //                     results[0].node.parent.getComponent(Cube).clickCube(results[0].node.name);\n    //                 }\n    //                 return;\n    //             }\n    //         }\n    //     }\n    //     this.isAllowTouch = true;\n    // }\n\n}\n"]}